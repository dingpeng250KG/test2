# Generated by Django 2.1.7 on 2019-02-27 04:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('agentid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('tel', models.CharField(max_length=20)),
                ('servstar', models.IntegerField(default=0)),
                ('realstar', models.IntegerField(default=0)),
                ('profstar', models.IntegerField(default=0)),
                ('certificated', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'tb_agent',
            },
        ),
        migrations.CreateModel(
            name='AgentEstate',
            fields=[
                ('agent_estate_id', models.AutoField(primary_key=True, serialize=False)),
                ('agent', models.ForeignKey(db_column='agentid', on_delete=django.db.models.deletion.DO_NOTHING, to='common.Agent')),
            ],
            options={
                'db_table': 'tb_agent_estate',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('distid', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('intro', models.CharField(blank=True, max_length=255, null=True)),
                ('parent', models.ForeignKey(blank=True, db_column='pid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='common.District')),
            ],
            options={
                'db_table': 'tb_district',
            },
        ),
        migrations.CreateModel(
            name='Estate',
            fields=[
                ('estateid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('hot', models.IntegerField(blank=True, default=0, null=True)),
                ('intro', models.CharField(blank=True, max_length=511, null=True)),
                ('agents', models.ManyToManyField(through='common.AgentEstate', to='common.Agent')),
                ('district', models.ForeignKey(db_column='distid', on_delete=django.db.models.deletion.DO_NOTHING, to='common.District')),
            ],
            options={
                'db_table': 'tb_estate',
            },
        ),
        migrations.CreateModel(
            name='HouseInfo',
            fields=[
                ('houseid', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50)),
                ('area', models.IntegerField()),
                ('floor', models.IntegerField()),
                ('totalfloor', models.IntegerField()),
                ('direction', models.CharField(max_length=10)),
                ('price', models.IntegerField()),
                ('priceunit', models.CharField(max_length=10)),
                ('detail', models.TextField(blank=True, max_length=10240, null=True)),
                ('mainphoto', models.CharField(max_length=255)),
                ('pubdate', models.DateTimeField(auto_now_add=True, null=True)),
                ('street', models.CharField(max_length=255)),
                ('hassubway', models.BooleanField(default=False)),
                ('isshared', models.BooleanField(default=False)),
                ('hasagentfees', models.BooleanField(default=False)),
                ('agent', models.ForeignKey(blank=True, db_column='agentid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='common.Agent')),
                ('district', models.ForeignKey(db_column='distid', on_delete=django.db.models.deletion.DO_NOTHING, to='common.District')),
                ('estate', models.ForeignKey(blank=True, db_column='estateid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='common.Estate')),
            ],
            options={
                'db_table': 'tb_house_info',
            },
        ),
        migrations.CreateModel(
            name='HousePhoto',
            fields=[
                ('photoid', models.AutoField(primary_key=True, serialize=False)),
                ('path', models.CharField(max_length=255)),
                ('house', models.ForeignKey(db_column='houseid', on_delete=django.db.models.deletion.DO_NOTHING, to='common.HouseInfo')),
            ],
            options={
                'db_table': 'tb_house_photo',
            },
        ),
        migrations.CreateModel(
            name='HouseTag',
            fields=[
                ('house_tag_id', models.AutoField(primary_key=True, serialize=False)),
                ('house', models.ForeignKey(db_column='houseid', on_delete=django.db.models.deletion.DO_NOTHING, to='common.HouseInfo')),
            ],
            options={
                'db_table': 'tb_house_tag',
            },
        ),
        migrations.CreateModel(
            name='HouseType',
            fields=[
                ('typeid', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'tb_house_type',
            },
        ),
        migrations.CreateModel(
            name='LoginLog',
            fields=[
                ('logid', models.BigAutoField(primary_key=True, serialize=False)),
                ('ipaddr', models.CharField(max_length=255)),
                ('logdate', models.DateTimeField(auto_now_add=True)),
                ('devcode', models.CharField(default='', max_length=255)),
            ],
            options={
                'db_table': 'tb_login_log',
            },
        ),
        migrations.CreateModel(
            name='Privilege',
            fields=[
                ('privid', models.AutoField(primary_key=True, serialize=False)),
                ('url', models.CharField(max_length=1024)),
                ('method', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'tb_privilege',
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('recordid', models.BigAutoField(primary_key=True, serialize=False)),
                ('recorddate', models.DateTimeField(auto_now=True)),
                ('house', models.ForeignKey(db_column='houseid', on_delete=django.db.models.deletion.DO_NOTHING, to='common.HouseInfo')),
            ],
            options={
                'db_table': 'tb_record',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('roleid', models.AutoField(primary_key=True, serialize=False)),
                ('rolename', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'tb_role',
            },
        ),
        migrations.CreateModel(
            name='RolePrivilege',
            fields=[
                ('rpid', models.AutoField(primary_key=True, serialize=False)),
                ('privilege', models.ForeignKey(db_column='privid', on_delete=django.db.models.deletion.CASCADE, to='common.Privilege')),
                ('role', models.ForeignKey(db_column='roleid', on_delete=django.db.models.deletion.CASCADE, to='common.Role')),
            ],
            options={
                'db_table': 'tb_role_privilege',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('tagid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'tb_tag',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('userid', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=20, unique=True)),
                ('password', models.CharField(max_length=32)),
                ('realname', models.CharField(max_length=20)),
                ('tel', models.CharField(max_length=20, unique=True)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('createdate', models.DateTimeField(auto_now_add=True)),
                ('point', models.IntegerField(default=0)),
                ('isagent', models.BooleanField(default=False)),
                ('is_authenticated', models.BooleanField(default=False)),
                ('lastvisit', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tb_user',
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('urid', models.AutoField(primary_key=True, serialize=False)),
                ('role', models.ForeignKey(db_column='roleid', on_delete=django.db.models.deletion.CASCADE, to='common.Role')),
                ('user', models.ForeignKey(db_column='userid', on_delete=django.db.models.deletion.CASCADE, to='common.User')),
            ],
            options={
                'db_table': 'tb_user_role',
            },
        ),
        migrations.CreateModel(
            name='UserToken',
            fields=[
                ('tokenid', models.AutoField(primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=32)),
                ('user', models.OneToOneField(db_column='userid', on_delete=django.db.models.deletion.CASCADE, to='common.User')),
            ],
            options={
                'db_table': 'tb_user_token',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='roles',
            field=models.ManyToManyField(through='common.UserRole', to='common.Role'),
        ),
        migrations.AddField(
            model_name='role',
            name='privileges',
            field=models.ManyToManyField(through='common.RolePrivilege', to='common.Privilege'),
        ),
        migrations.AddField(
            model_name='record',
            name='user',
            field=models.ForeignKey(db_column='userid', on_delete=django.db.models.deletion.DO_NOTHING, to='common.User'),
        ),
        migrations.AddField(
            model_name='loginlog',
            name='user',
            field=models.ForeignKey(db_column='userid', on_delete=django.db.models.deletion.DO_NOTHING, to='common.User'),
        ),
        migrations.AddField(
            model_name='housetag',
            name='tag',
            field=models.ForeignKey(db_column='tagid', on_delete=django.db.models.deletion.DO_NOTHING, to='common.Tag'),
        ),
        migrations.AddField(
            model_name='houseinfo',
            name='tags',
            field=models.ManyToManyField(through='common.HouseTag', to='common.Tag'),
        ),
        migrations.AddField(
            model_name='houseinfo',
            name='type',
            field=models.ForeignKey(db_column='typeid', on_delete=django.db.models.deletion.DO_NOTHING, to='common.HouseType'),
        ),
        migrations.AddField(
            model_name='houseinfo',
            name='user',
            field=models.ForeignKey(db_column='userid', on_delete=django.db.models.deletion.DO_NOTHING, to='common.User'),
        ),
        migrations.AddField(
            model_name='agentestate',
            name='estate',
            field=models.ForeignKey(db_column='estateid', on_delete=django.db.models.deletion.DO_NOTHING, to='common.Estate'),
        ),
        migrations.AddField(
            model_name='agent',
            name='estates',
            field=models.ManyToManyField(through='common.AgentEstate', to='common.Estate'),
        ),
        migrations.AlterUniqueTogether(
            name='userrole',
            unique_together={('user', 'role')},
        ),
        migrations.AlterUniqueTogether(
            name='roleprivilege',
            unique_together={('role', 'privilege')},
        ),
        migrations.AlterUniqueTogether(
            name='record',
            unique_together={('user', 'house')},
        ),
        migrations.AlterUniqueTogether(
            name='housetag',
            unique_together={('tag', 'house')},
        ),
        migrations.AlterUniqueTogether(
            name='agentestate',
            unique_together={('estate', 'agent')},
        ),
    ]
